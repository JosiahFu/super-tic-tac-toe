.game-grid {
    width: 80vmin;
    height: 80vmin;
    --player-1-color: #ff0000;
    --player-2-color: #007fff;
    --highlight-color: #0000000f;
    --border-width: 0.3em;
    border-radius: 3%;
}

@media screen and (prefers-color-scheme: dark) {
    .game-grid {
        --highlight-color: #ffffff1f;
    }
}
.game-grid,
.subgrid {
    display: grid;
    grid-template-columns: repeat(3, auto);
    grid-template-rows: repeat(3, auto);
}

.cell {
    /*Needed to position pseudo-children*/
    position: relative;
    --marker-border-width: 0.3em;
    --marker-opacity: 1;
}

.cell.allowed {
    cursor: pointer;
}

.cell,
.supercell {
    border-left: var(--border-width) solid var(--fg-color);
    border-top: var(--border-width) solid var(--fg-color);
}

.cell:nth-child(3n+1),
.supercell:nth-child(3n+1) {
    border-left: none;
}

.cell:nth-child(-n+3),
.supercell:nth-child(-n+3) {
    border-top: none;
}
.supercell {
    --marker-border-width: 1em;
    padding: 5%;
}

.subgrid {
    /*Needed to position pseudo-children*/
    position: relative;
    padding: 5%;
        height: 100%;
        box-sizing: border-box;
        border-radius: 10%;
}

.cell.allowed:hover::before,
.cell.allowed:hover::after {
    opacity: 0.5;
}

.player-1::before,
.player-1::after,
.player-2::before,
.player-1-turn .cell.allowed:hover::before,
.player-1-turn .cell.allowed:hover::after,
.player-2-turn .cell.allowed:hover::before {
    content: '';
    position: absolute;
    left: 50%;
    top: 50%;
}

.subgrid.player-1::before,
.subgrid.player-1::after,
.subgrid.player-2::before {
    z-index: 1;
    /* opacity: 0.7; */
}

.player-1::before,
.player-1::after,
.player-1-turn .cell.allowed:hover::before,
.player-1-turn .cell.allowed:hover::after {
    height: var(--marker-border-width);
    width: 100%;
    background-color: var(--player-1-color);
}

.player-1::before,
.player-1-turn .cell.allowed:hover::before {
    transform: translate(-50%, -50%) rotate(45deg);
}

.player-1::after,
.player-1-turn .cell.allowed:hover::after {
    transform: translate(-50%, -50%) rotate(-45deg);
}

.player-2::before,
.player-2-turn .cell.allowed:hover::before {
    width: 80%;
    height: 80%;
    box-sizing: border-box;
    border-radius: 50%;
    border: var(--marker-border-width) solid var(--player-2-color);
    transform: translate(-50%, -50%);
}

.subgrid.allowed,
.game-grid.allowed {
    background-color: var(--highlight-color);
}

.allowed .subgrid.allowed {
    background-color: transparent;
}

.player-1 .cell,
.player-2 .cell {
    opacity: 0.5;
}
